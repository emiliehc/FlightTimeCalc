/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FTC;

import java.awt.Font;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.*;
import java.io.*;

/**
 *
 * @author njche
 */
public class Main extends javax.swing.JFrame {
    
    // declarations
    // departure airport
    private final String departureAirport = JOptionPane.showInputDialog("Please enter your departure airport");
    // legs and stops
    private ArrayList legs = new ArrayList<>();
    private ArrayList legTimes = new ArrayList<Double>();
    private ArrayList stops = new ArrayList<>();
    private ArrayList stopTimes = new ArrayList<Double>();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        txtInput.setText("DEPARTURE AIRPORT: " + departureAirport + "\nVIA\t\tTIME (MIN)\tTO\tSTOP TIME (MIN)\n");
        txtInput.setFont(new Font("Monospaced", Font.PLAIN, 13));
        txtOutput.setFont(new Font("Monospaced", Font.PLAIN, 13));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        txtLeg = new javax.swing.JTextField();
        lblLeg = new javax.swing.JLabel();
        lblHour = new javax.swing.JLabel();
        lblMinute = new javax.swing.JLabel();
        btnFinish = new javax.swing.JButton();
        lblStop = new javax.swing.JLabel();
        sp = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        txtStop = new javax.swing.JTextField();
        lblHour1 = new javax.swing.JLabel();
        lblMinute1 = new javax.swing.JLabel();
        txtLegHour = new javax.swing.JSpinner();
        txtLegMinute = new javax.swing.JSpinner();
        txtStopHour = new javax.swing.JSpinner();
        txtStopMinute = new javax.swing.JSpinner();
        sp1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        txtDepartureTime = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        lblDepartureTime = new javax.swing.JLabel();
        btnExport = new javax.swing.JButton();
        btnUtil = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flight Time Calculator");
        setName("Flight Time Calculator"); // NOI18N

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblLeg.setText("Leg");

        lblHour.setText("Hour");

        lblMinute.setText("Minute");

        btnFinish.setText("Finish");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        lblStop.setText("Stop (APPR. + LAND./T.O. + Layover)");
        lblStop.setName(""); // NOI18N

        txtInput.setColumns(20);
        txtInput.setRows(5);
        sp.setViewportView(txtInput);

        lblHour1.setText("Hour");

        lblMinute1.setText("Minute");

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        txtOutput.setEnabled(false);
        sp1.setViewportView(txtOutput);

        txtDepartureTime.setEnabled(false);

        btnCalculate.setText("Calculate");
        btnCalculate.setEnabled(false);
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        lblDepartureTime.setText("Departure Time (HH:mm)");

        btnExport.setText("Export");
        btnExport.setEnabled(false);
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnUtil.setText("Utilities");
        btnUtil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUtilActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setEnabled(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtStop, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addComponent(txtLeg, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblLeg, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(lblStop))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHour1)
                                    .addComponent(txtStopHour, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtStopMinute))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lblMinute1)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHour)
                                    .addComponent(txtLegHour, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLegMinute)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMinute)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addComponent(sp1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUtil, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDepartureTime)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLeg)
                    .addComponent(lblHour)
                    .addComponent(lblMinute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLegHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLegMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStop)
                    .addComponent(lblHour1)
                    .addComponent(lblMinute1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStopHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStopMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinish)
                    .addComponent(btnAdd)
                    .addComponent(btnUtil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDepartureTime)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCalculate)
                    .addComponent(btnClear)
                    .addComponent(btnExport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblStop.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:

        legs.add(txtLeg.getText().length() < 4 ? txtLeg.getText() + "\t" : txtLeg.getText());
        legTimes.add((int) txtLegHour.getValue() * 60 + (int) txtLegMinute.getValue());
        stops.add(txtStop.getText());
        stopTimes.add((int) txtStopHour.getValue() * 60 + (int) txtStopMinute.getValue());
        txtInput.setText(txtInput.getText() + legs.get(legs.size() - 1) + "\t" + legTimes.get(legTimes.size() - 1) + "\t\t");
        txtInput.setText(txtInput.getText() + stops.get(legs.size() - 1) + "\t" + stopTimes.get(legTimes.size() - 1) + "\n");

        txtStop.setText("");
        txtStopHour.setValue(0);
        txtStopMinute.setValue(0);
        txtLeg.setText("");
        txtLegHour.setValue(0);
        txtLegMinute.setValue(0);


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Would you like to finish?", "Comfirm", JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
            // disable the previous section of the program
            txtLeg.setEnabled(false);
            txtLegHour.setEnabled(false);
            txtLegMinute.setEnabled(false);
            txtStop.setEnabled(false);
            txtStopHour.setEnabled(false);
            txtStopMinute.setEnabled(false);
            btnAdd.setEnabled(false);
            btnFinish.setEnabled(false);
            // enable the next section
            txtDepartureTime.setEnabled(true);
            btnCalculate.setEnabled(true);
            txtOutput.setEnabled(true);
            btnExport.setEnabled(true);
            btnClear.setEnabled(true);
        }

    }//GEN-LAST:event_btnFinishActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        // interpret the time

        DateFormat df = new SimpleDateFormat("HH:mm");
        String output = "";
        try {
            Date departureTime = df.parse(txtDepartureTime.getText());
            Date time = departureTime;
            output += "DEPARTURE TIME: " + toProperTime(departureTime.getHours(), departureTime.getMinutes()) + "\n";
            output += "VIA\t\tARRIVAL TIME\tTO\tDEPARTURE TIME\n";
            for (int i = 0; i < legs.size() - 1; i++) {
                time = addMinutesToDate((int) legTimes.get(i), time);
                output += legs.get(i) + "\t" + toProperTime(time.getHours(), time.getMinutes()) + "\t\t";
                time = addMinutesToDate((int) stopTimes.get(i), time);
                output += stops.get(i) + "\t" + toProperTime(time.getHours(), time.getMinutes()) + "\n";
            }
            // the last leg and destination airport
            time = addMinutesToDate((int) legTimes.get(legTimes.size() - 1), time);
            output += legs.get(legs.size() - 1) + "\t" + toProperTime(time.getHours(), time.getMinutes()) + "\t\t";
            time = addMinutesToDate((int) stopTimes.get(stopTimes.size() - 1), time);
            output += stops.get(stops.size() - 1) + "\n";

            output += "ETA: " + toProperTime(time.getHours(), time.getMinutes()) + "\n---------------------------\n";

            txtOutput.setText(txtOutput.getText() + output);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "Error parsing the time\n" + ex, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        String fileName = JOptionPane.showInputDialog("File name");
        fileName = fileName.contains(".txt") ? fileName : fileName + ".txt";
        try {
            BufferedWriter fOut = new BufferedWriter(new FileWriter(fileName));
            fOut.write(txtOutput.getText());
            fOut.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Export Error", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnUtilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUtilActionPerformed
        // TODO add your handling code here:
        UtilLauncher ul = new UtilLauncher();
        ul.pack();
        ul.setVisible(true);
    }//GEN-LAST:event_btnUtilActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        // clear the box
        txtOutput.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    String toProperTime(int h, int m) {
        String hour = h < 10 ? "0" + Integer.toString(h) : Integer.toString(h);
        String minute = m < 10 ? "0" + Integer.toString(m) : Integer.toString(m);
        return hour + ":" + minute;
    }

    private static Date addMinutesToDate(int minutes, Date beforeTime) {
        final long ONE_MINUTE_IN_MILLIS = 60000;//millisecs

        long curTimeInMs = beforeTime.getTime();
        Date afterAddingMins = new Date(curTimeInMs + (minutes * ONE_MINUTE_IN_MILLIS));
        return afterAddingMins;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnUtil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblDepartureTime;
    private javax.swing.JLabel lblHour;
    private javax.swing.JLabel lblHour1;
    private javax.swing.JLabel lblLeg;
    private javax.swing.JLabel lblMinute;
    private javax.swing.JLabel lblMinute1;
    private javax.swing.JLabel lblStop;
    private javax.swing.JScrollPane sp;
    private javax.swing.JScrollPane sp1;
    private javax.swing.JTextField txtDepartureTime;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextField txtLeg;
    private javax.swing.JSpinner txtLegHour;
    private javax.swing.JSpinner txtLegMinute;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtStop;
    private javax.swing.JSpinner txtStopHour;
    private javax.swing.JSpinner txtStopMinute;
    // End of variables declaration//GEN-END:variables
}
